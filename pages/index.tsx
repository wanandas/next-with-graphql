import { ApolloClient, gql, InMemoryCache } from "@apollo/client";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useMemo } from "react";
import styles from "../styles/Home.module.css";

interface Props {
  data: LaunchesPast;
}

interface LaunchesPast {
  launchesPast: any[];
}

const Home = (props: Props) => {
  const launcherPast = useMemo(() => {
    return props.data.launchesPast;
  }, []);
  console.log(launcherPast);

  return (
    <div className={styles.container}>
      <Head>
        <title>Space X</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://www.spacex.com/">Space X</a>
        </h1>

        <p className={styles.description}>Lastest launches from SpaceX</p>

        <div className={styles.grid}>
          {launcherPast.map((value, i) => {
            return (
              <a
                href={value.links.video_link}
                key={i}
                className={styles.card}
                target="_blank"
              >
                <h2>{value.mission_name} </h2>
                <p>
                  <strong>rocket name</strong>: {value.rocket.rocket_name}
                </p>
                <hr></hr>
                <p>
                  <strong>launch site</strong>:{" "}
                  {value.launch_site.site_name_long}
                </p>
              </a>
            );
          })}
        </div>
      </main>

      <footer className={styles.footer}>
        <div>
          <a href="https://api.spacex.land/graphql/">
            <span> API GRAPHQL BY </span>
            <span> &nbsp;SPACE X </span>
          </a>
        </div>
      </footer>
    </div>
  );
};

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: "https://api.spacex.land/graphql/",
    cache: new InMemoryCache(),
  });

  const { data } = await client.query({
    query: gql`
      query GetLaunchesPast {
        launchesPast(limit: 10) {
          mission_name
          launch_date_local
          launch_site {
            site_name_long
          }
          links {
            article_link
            video_link
          }
          rocket {
            rocket_name
          }
        }
      }
    `,
  });

  return {
    props: { data }, // will be passed to the page component as props
  };
}

export default Home;
